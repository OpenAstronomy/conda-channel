# The language in this case has no bearing - we are going to be making use of "conda" for a
# python distribution for the scientific python stack.
language: c

os:
  - linux
  - osx

env:
    global:
        - DESTINATION_CONDA_CHANNEL="openastronomy"
        - TARGET_ARCH="x64"
        - CONDA_INSTALL_LOCN="${HOME}/miniconda"

        # Defines BINSTAR_TOKEN for your binstar channel
        - secure: "ByP5bQWpI4weINGAblXqqeVbU6/j5U4lnkByqNlsLgvt4nLRJEmaCc0O18nzzqn0Rfc1CCLVeTNlb1oZeS2aVtPzwjyCoaoQRROaFca4geEAm7nln1U5uaPjVqRSJWOamUQ1d0tUwbSaTeUdmUpmXzg/sFvH/VIie7UpdYJSML8k2jZLbdldizw2o2SSh7CTXB0IBb80hrbKyzMEdw3zWCtEeHA6t/k2qodAHxBDKEkPw3J/MOcc3VSwCYkISjKkNdhUcyEfo37BTiV5WyaJcWp4c4cdhy4wqGXpjppubCl3FuvlAAFDknY0v6D2I2kdE6j6SlFME/EFTwqkLYouPkdScTR/BUru7AMpjBPnhD8ZDlwXfKvR2Rx0FaKKFx+fhP2SCCsLUxlaj7naP8v7ERmrYwSI5pDJq62rgXT2NDWO4qA07nkncOVZqaPVoWZopTfWTf84lv4dnkgdwSzDvstkcL/BzOcLavlRUgYqLaReFdfoeoPLhG9i6QGrU9QH/yyV+mzF5c57IyqKTfJd3Mz5tO75e3qxuUpqBFeO5Rtxp+4cJdPM9V4ZMwDphmoQkPQHDLdR+W2vXJBU6wyn3jOf1kGI75F4UKPRR+CEFjuzRlPGtbiH36pvFOnT0XHMKy6XbPgc9kwBoe1ii1sl9nAQ0x1dSkm9/nThLUtFeR4="

        # The python build restriction MUST be set at the moment, though it
        # can have any value. The setting below avoids known-bad builds on
        # python 2.6 and 3.3 for some packages.
        - PYTHON_BUILD_RESTRICTIONS="2.7*|>=3.4"
        # This apparently needs to be set even if it is not used...
        - CONDA_NPY=1.11
        - CONDA_VERSION=4.2*

# Matrix is fully specified (for now) by os versions

install:
    # Install and set up miniconda.
    - if [ $TRAVIS_OS_NAME == "linux" ]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; fi
    - if [ $TRAVIS_OS_NAME == "osx" ]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
    - bash miniconda.sh -b -p $CONDA_INSTALL_LOCN
    - export PATH=${CONDA_INSTALL_LOCN}/bin:$PATH
    - conda config --set always_yes true

    - PIN_FILE_CONDA=${CONDA_INSTALL_LOCN}/conda-meta/pinned
    - echo "conda ${CONDA_VERSION}" > $PIN_FILE_CONDA

    - conda update --quiet conda

    # Install a couple of dependencies we need for sure.
    - conda install --quiet --yes astropy anaconda-client jinja2 cython pycrypto

    - conda config --add channels astropy
    - conda config --add channels openastronomy

    # Add conda-forge, but then add defaults again to bump it up to top priority
    - conda config --add channels conda-forge
    - conda config --add channels defaults

    - conda install conda-build=2.0.10

    # Install dependencies of conda-build-all. Necessary until conda-forge
    # no longer has old version of conda-build
    #- conda install funcsigs gitdb gitpython mock pbr smmap

    # Install conda-build-all
    - conda install conda-build-all=1.0*

    # Finally, install extruder
    - conda install -c astropy extruder

    # To ease debugging, list installed packages
    - conda info -a

script:
    # Only upload if this is NOT a pull request.
    - UPLOAD="";
    - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        if [ $TRAVIS_REPO_SLUG = "Openastronomy/conda-channel" ]; then
          echo "Uploading enabled";
          UPLOAD="--upload-channels $DESTINATION_CONDA_CHANNEL";
        fi;
      fi
    # Get ready to build.
    - extrude_recipes requirements.yml
    # Packages are uploaded as they are built.
    - if [[ -d recipes ]]; then conda build-all recipes --inspect-channels "$DESTINATION_CONDA_CHANNEL" conda-forge --matrix-condition="python $PYTHON_BUILD_RESTRICTIONS" $UPLOAD; fi
